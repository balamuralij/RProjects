df %>% group_by(SeniorCitizen,Churn) %>% summarise(n=n()) %>% mutate(freq = n/sum(n))
df %>% group_by(SeniorCitizen) %>% summarise(n=n()) %>% mutate(freq = n/sum(n))
df_tbl <- df %>% select_if(is.factor) %>% summarise_all(n_distinct)
colSums(is.na(df))
#partner
ggplot(df) + geom_bar(aes(x=Partner, fill=Churn),position = "dodge")
df %>% group_by(Partner) %>% summarise(n=n()) %>% mutate(freq = n/sum(n))
df %>% group_by(Partner,Churn) %>% summarise(n=n()) %>% mutate(freq = n/sum(n))
colSums(is.na(df))
#dependents
ggplot(df) + geom_bar(aes(x=Dependents, fill=Churn),position = "dodge")
df %>% group_by(Dependents) %>% summarise(n=n()) %>% mutate(freq = n/sum(n))
df %>% group_by(Dependents,Churn) %>% summarise(n=n()) %>% mutate(freq = n/sum(n))
colSums(is.na(df))
#box Plots
ggplot(df,aes(x=SeniorCitizen,y=TotalCharges))
#box Plots
ggplot(df,aes(x=SeniorCitizen,y=TotalCharges)) + geom_boxplot()
ggplot(df,aes(x=Dependents,y=TotalCharges)) + geom_boxplot()
ggplot(df,aes(x=Partner,y=TotalCharges)) + geom_boxplot()
df %>% select(SeniorCitizen,Churn,TotalCharges,tenure) %>% filter(SeniorCitizen == 1,Churn == "Yes")  %>%
summarize(n=n(),total = sum(TotalCharges),avg_tenure = sum(tenure)/n)
df %>% select(Partner,Churn,TotalCharges,tenure) %>% filter(Partner == "No",Churn == "Yes")  %>%
summarize(n=n(),total = sum(TotalCharges),avg_tenure = sum(tenure)/n)
df %>% select(Dependents,Churn,TotalCharges,tenure) %>% filter(Dependents == "No",Churn == "Yes")  %>%
summarize(n=n(),total = sum(TotalCharges),avg_tenure = sum(tenure)/n)
#get No Dependents
dependents <- df %>% filter(Dependents == "No")
dependents
colSums(is.na(df))
#Senior Citizen - Churn More
ggplot(df) + geom_bar(aes(x=SeniorCitizen, fill=Churn),position = "dodge")
ggplotGrid(ncol=2,lapply(c("PhoneService","MultipleLines","InternetService","OnlineSecurity","DeviceProtection"),function(col){ggplot(dependents,aes_string(col)) + geom_bar(aes(fill=Churn),position="dodge"}))
ggplotGrid(ncol=2,lapply(c("PhoneService","MultipleLines","InternetService","OnlineSecurity","DeviceProtection"),function(col){ggplot(dependents,aes_string(col)) + geom_bar(aes(fill=Churn),position="dodge" }))
ggplotGrid(ncol=2,lapply(c("PhoneService","MultipleLines","InternetService","OnlineSecurity","DeviceProtection"),function(col){ggplot(dependents,aes_string(col)) + geom_bar(aes(fill=Churn),position="dodge" } ) )
library(miscset)
library(tidyverse)
library(psych)
ggplotGrid(ncol=2,lapply(c("PhoneService","MultipleLines","InternetService","OnlineSecurity","DeviceProtection"),function(col){ggplot(dependents,aes_string(col)) + geom_bar(aes(fill=Churn),position="dodge" } ) )
ggplotGrid(ncol=2,
lapply(c("PhoneService","MultipleLines","InternetService","OnlineSecurity","OnlineBackup",
"DeviceProtection"),
function(col){
ggplot(dependents,aes_string(col)) + geom_bar(aes(fill=Churn),position="dodge")
}))
ggplotGrid(ncol=2,
lapply(c("PhoneService","MultipleLines","InternetService","OnlineSecurity","OnlineBackup",
"DeviceProtection"),
function(col){
ggplot(dependents,aes_string(col)) + geom_bar(aes(fill=Churn),position="dodge")
ggplotGrid(ncol=2,
lapply(c("PhoneService","MultipleLines","InternetService","OnlineSecurity","OnlineBackup",
"DeviceProtection"),
function(col){
ggplot(dependents,aes_string(col)) + geom_bar(aes(fill=Churn),position="dodge")
ggplotGrid(ncol=2,
lapply(c("PhoneService","MultipleLines","InternetService","OnlineSecurity","OnlineBackup",
"DeviceProtection"),
function(col){
ggplot(dependents,aes_string(col)) + geom_bar(aes(fill=Churn),position="dodge")
}))
#get No Dependents
dependents <- df %>% filter(Dependents == "No")
ggplotGrid(ncol=2,
lapply(c("PhoneService","MultipleLines","InternetService","OnlineSecurity","OnlineBackup",
"DeviceProtection"),
function(col){
ggplot(dependents,aes_string(col)) + geom_bar(aes(fill=Churn),position="dodge")
}))
colSums(is.na(df))
library(tidyverse)
library(miscset)
df <- read.csv("C:/Users/bjanarth/Documents/DataScience/Science Projects/TelcoChurn.csv")
#structure
str(df)
#dimensions
dim_desc(df)
#names
names(df)
#datatypes
glimpse(df)
df <- df %>% mutate_if(is.character, as.factor)
df$SeniorCitizen <- as.factor(df$SeniorCitizen)
glimpse(df)
str(df)
df %>% map(~ sum(is.na(.)))
#impute
df <- df %>% mutate(TotalCharges = replace(TotalCharges,is.na(TotalCharges),median(TotalCharges,na.rm = T)))
#check if missing values are there
sum(is.na(df$TotalCharges))
library(psych)
describe(df)
colSums(is.na(df))
df_tbl <- df %>% select_if(is.factor) %>% summarise_all(n_distinct)
#Data Analysis
#Gender
ggplot(df) + geom_bar(aes(x=gender, fill=Churn),position = "dodge")
df %>% group_by(gender,Churn) %>% summarise(n=n())
#Senior Citizen - Churn More
ggplot(df) + geom_bar(aes(x=SeniorCitizen, fill=Churn),position = "dodge")
df %>% group_by(SeniorCitizen) %>% summarise(n=n()) %>% mutate(freq = n/sum(n))
df %>% group_by(SeniorCitizen,Churn) %>% summarise(n=n()) %>% mutate(freq = n/sum(n))
#partner - No Partners Churn More
ggplot(df) + geom_bar(aes(x=Partner, fill=Churn),position = "dodge")
df %>% group_by(Partner) %>% summarise(n=n()) %>% mutate(freq = n/sum(n))
df %>% group_by(Partner,Churn) %>% summarise(n=n()) %>% mutate(freq = n/sum(n))
#dependents - No Dependents churn More
ggplot(df) + geom_bar(aes(x=Dependents, fill=Churn),position = "dodge")
df %>% group_by(Dependents) %>% summarise(n=n()) %>% mutate(freq = n/sum(n))
df %>% group_by(Dependents,Churn) %>% summarise(n=n()) %>% mutate(freq = n/sum(n))
#box Plots
ggplot(df,aes(x=SeniorCitizen,y=TotalCharges)) + geom_boxplot()
ggplot(df,aes(x=Partner,y=TotalCharges)) + geom_boxplot()
ggplot(df,aes(x=Dependents,y=TotalCharges)) + geom_boxplot()
#Compare against Total Charges
#Senior Citizen
df %>% select(SeniorCitizen,Churn,TotalCharges,tenure) %>% filter(SeniorCitizen == 1,Churn == "Yes")  %>%
summarize(n=n(),total = sum(TotalCharges),avg_tenure = sum(tenure)/n)
#No Partners
df %>% select(Partner,Churn,TotalCharges,tenure) %>% filter(Partner == "No",Churn == "Yes")  %>%
summarize(n=n(),total = sum(TotalCharges),avg_tenure = sum(tenure)/n)
#No Dependents   ( High Total Charges)
df %>% select(Dependents,Churn,TotalCharges,tenure) %>% filter(Dependents == "No",Churn == "Yes")  %>%
summarize(n=n(),total = sum(TotalCharges),avg_tenure = sum(tenure)/n)
#get No Dependents
dependents <- df %>% filter(Dependents == "No")
ggplotGrid(ncol=2,
lapply(c("PhoneService","MultipleLines","InternetService","OnlineSecurity","OnlineBackup",
"DeviceProtection"),
function(col){
ggplot(dependents,aes_string(col)) + geom_bar(aes(fill=Churn),position="dodge")
}))
library(tidyverse)
library(miscset)
library(tidyverse)
library(miscset)
df <- read.csv("C:/Users/bjanarth/Documents/DataScience/Science Projects/TelcoChurn.csv")
#structure
str(df)
df <- df %>% mutate_if(is.character, as.factor)
df$SeniorCitizen <- as.factor(df$SeniorCitizen)
glimpse(df)
str(df)
df <- df %>% mutate(TotalCharges = replace(TotalCharges,is.na(TotalCharges),median(TotalCharges,na.rm = T)))
#check if missing values are there
sum(is.na(df$TotalCharges))
library(psych)
describe(df)
colSums(is.na(df))
df_tbl <- df %>% select_if(is.factor) %>% summarise_all(n_distinct)
#Data Analysis
#Gender
ggplot(df) + geom_bar(aes(x=gender, fill=Churn),position = "dodge")
df %>% group_by(gender,Churn) %>% summarise(n=n())
#Senior Citizen - Churn More
ggplot(df) + geom_bar(aes(x=SeniorCitizen, fill=Churn),position = "dodge")
df %>% group_by(SeniorCitizen) %>% summarise(n=n()) %>% mutate(freq = n/sum(n))
df %>% group_by(SeniorCitizen,Churn) %>% summarise(n=n()) %>% mutate(freq = n/sum(n))
#partner - No Partners Churn More
ggplot(df) + geom_bar(aes(x=Partner, fill=Churn),position = "dodge")
#dependents - No Dependents churn More
ggplot(df) + geom_bar(aes(x=Dependents, fill=Churn),position = "dodge")
#get No Dependents
dependents <- df %>% filter(Dependents == "No")
ggplotGrid(ncol=2,
lapply(c("PhoneService","MultipleLines","InternetService","OnlineSecurity","OnlineBackup",
"DeviceProtection"),
function(col){
ggplot(dependents,aes_string(col)) + geom_bar(aes(fill=Churn),position="dodge")
}))
ggplotGrid(ncol=2,
lapply(c("TechSupport","StreamingTV","StreamingMovies","Contract",
"PaperlessBilling"),
function(col){
ggplot(dependents,aes_string(col)) + geom_bar(aes(fill=Churn),position="dodge")
}))
ggplotGrid(ncol=2,
lapply(c("TechSupport","StreamingTV","StreamingMovies","Contract",
"PaperlessBilling","PaymentMethod"),
function(col){
ggplot(dependents,aes_string(col)) + geom_bar(aes(fill=Churn),position="dodge")
}))
ggplotGrid(dependents+geom_bar(aes(x=PaymentMethod,fill=churn),position = "dodge"))
ggplot(dependents+geom_bar(aes(x=PaymentMethod,fill=churn),position = "dodge"))
ggplot(dependents)+geom_bar(aes(x=PaymentMethod,fill=churn),position = "dodge")
ggplot(dependents)+geom_bar(aes(x=PaymentMethod,fill=Churn),position = "dodge")
install.packages("caret")
library(caret)
display(df)
Display(df)
show(df)
df <- df %>% select(-customerID)
show(df)
set.seed(5)
inTrain <- createDataPartition(y = df$Churn, p=0.75,list = FALSE)
train <- df[inTrain,]
test  <- df[-inTrain,]
#fit logistic regression
fit <- glm(Churn~.,data=train,family = binomial)
#prediction
churn.probs <- predict(fit,test,type = "response")
head(churn.probs)
library(tidyverse)
library(miscset)
df <- read.csv("C:/Users/bjanarth/Documents/DataScience/Science Projects/TelcoChurn.csv")
df <- df %>% mutate_if(is.character, as.factor)
df$SeniorCitizen <- as.factor(df$SeniorCitizen)
glimpse(df)
str(df)
df %>% map(~ sum(is.na(.)))
df <- df %>% mutate(TotalCharges = replace(TotalCharges,is.na(TotalCharges),median(TotalCharges,na.rm = T)))
#check if missing values are there
sum(is.na(df$TotalCharges))
library(psych)
describe(df)
colSums(is.na(df))
df_tbl <- df %>% select_if(is.factor) %>% summarise_all(n_distinct)
#Data Analysis
#Gender
ggplot(df) + geom_bar(aes(x=gender, fill=Churn),position = "dodge")
df %>% group_by(SeniorCitizen) %>% summarise(n=n()) %>% mutate(freq = n/sum(n))
df %>% group_by(SeniorCitizen,Churn) %>% summarise(n=n()) %>% mutate(freq = n/sum(n))
#partner - No Partners Churn More
ggplot(df) + geom_bar(aes(x=Partner, fill=Churn),position = "dodge")
df %>% select(SeniorCitizen,Churn,TotalCharges,tenure) %>% filter(SeniorCitizen == 1,Churn == "Yes")  %>%
summarize(n=n(),total = sum(TotalCharges),avg_tenure = sum(tenure)/n)
#get No Dependents
dependents <- df %>% filter(Dependents == "No")
ggplotGrid(ncol=2,
lapply(c("PhoneService","MultipleLines","InternetService","OnlineSecurity","OnlineBackup",
"DeviceProtection"),
function(col){
ggplot(dependents,aes_string(col)) + geom_bar(aes(fill=Churn),position="dodge")
ggplotGrid(ncol=2,
lapply(c("PhoneService","MultipleLines","InternetService","OnlineSecurity","OnlineBackup",
"DeviceProtection"),
function(col){
ggplot(dependents,aes_string(col)) + geom_bar(aes(fill=Churn),position="dodge")
}))
ggplotGrid(ncol=2,
lapply(c("PhoneService","MultipleLines","InternetService","OnlineSecurity","OnlineBackup",
"DeviceProtection"),
function(col){
ggplot(dependents,aes_string(col)) + geom_bar(aes(fill=Churn),position="dodge")
}))
ggplotGrid(ncol=2,
lapply(c("PhoneService","MultipleLines","InternetService","OnlineSecurity","OnlineBackup",
"DeviceProtection"),
function(col){
ggplot(dependents,aes_string(col)) + geom_bar(aes(fill=Churn),position="dodge")
}))
df %>% select(SeniorCitizen,Churn,TotalCharges,tenure) %>% filter(SeniorCitizen == 1,Churn == "Yes")  %>%
summarize(n=n(),total = sum(TotalCharges),avg_tenure = sum(tenure)/n)
ggplot(df,aes(x=Dependents,y=TotalCharges)) + geom_boxplot()
df_tbl <- df %>% select_if(is.factor) %>% summarise_all(n_distinct)
#Data Analysis
#Gender
ggplot(df) + geom_bar(aes(x=gender, fill=Churn),position = "dodge")
#get No Dependents
dependents <- df %>% filter(Dependents == "No")
str(dependents)
View(dependents)
View(dependents)
library(tidyverse)
head(churn.probs)
df$Churn
df_tel$Churn
library(tidyverse)
library(miscset)
library(tidyverse)
library(miscset)
df_tel <- read.csv("C:/Users/bjanarth/Documents/DataScience/Science Projects/TelcoChurn.csv")
df_tel <- df_tel %>% mutate_if(is.character, as.factor)
df_tel$SeniorCitizen <- as.factor(df$SeniorCitizen)
glimpse(df)
glimpse(df_tel)
df_tel %>% map(~ sum(is.na(.)))
df_tel <- df_tel %>% mutate(TotalCharges = replace(TotalCharges,is.na(TotalCharges),median(TotalCharges,na.rm = T)))
#check if missing values are there
sum(is.na(df_tel$TotalCharges))
library(psych)
colSums(is.na(df_tel))
#Data Analysis
#Gender
ggplot(df_tel) + geom_bar(aes(x=gender, fill=Churn),position = "dodge")
#get No Dependents
dependents_tel <- df_tel %>% filter(Dependents == "No")
library(caret)
#remove customer id
df_tel <- df_tel %>% select(-customerID)
set.seed(5)
inTrain_tel <- createDataPartition(y = df_tel$Churn, p=0.75,list = FALSE)
train_tel <- df_tel[inTrain_tel,]
test_tel  <- df_tel[-inTrain_tel,]
#fit logistic regression
fit_tel <- glm(Churn~.,data=train_tel,family = binomial)
#prediction
churn_tel.probs <- predict(fit_tel,test_tel,type = "response")
head(churn_tel.probs)
head(churn_tel.probs)
df_tel$Churn
contrasts(df_tel$Churn)
glm.pred_tel = rep("No",length(churn_tel.probs))
glm.pred_tel[churn.probs > 0.5] = "Yes"
confusionMatrix(glm.pred_tel,test$Churn, positive = "Yes")
ggplotGrid(ncol=2,
lapply(c("PhoneService","MultipleLines","InternetService","OnlineSecurity","OnlineBackup",
"DeviceProtection"),
function(col){
ggplot(dependents_tel,aes_string(col)) + geom_bar(aes(fill=Churn),position="dodge")
}))
confusionMatrix(glm.pred_tel,test$Churn, positive = "Yes")
confusionMatrix(glm.pred_tel,test_tel$Churn, positive = "Yes")
telftr = as.factor(test_tel$Churn)
glm.pred_tel = as.factor(glm.pred_tel)
confusionMatrix(glm.pred_tel,test_tel$Churn, positive = "Yes")
confusionMatrix(glm.pred_tel,telftr, positive = "Yes")
glm.pred_tel = rep("No",length(churn_tel.probs))
telftr = as.factor(test_tel$Churn)
glm.pred_tel[churn.probs > 0.5] = "Yes"
glm.pred_tel = rep("No",length(churn_tel.probs))
telftr = as.factor(test_tel$Churn)
glm.pred_tel[churn_tel.probs > 0.5] = "Yes"
glm.pred_tel = as.factor(glm.pred_tel)
confusionMatrix(glm.pred_tel,telftr, positive = "Yes")
library(tidyverse)
library(miscset)
library(caret)
confusionMatrix(glm.pred_tel,telftr, positive = "Yes")
install.packages("e1071")
confusionMatrix(glm.pred_tel,telftr, positive = "Yes")
ggplotGrid(ncol=2,
lapply(c("TechSupport","StreamingTV","StreamingMovies","Contract",
"PaperlessBilling","PaymentMethod"),
function(col){
ggplot(dependents_tel,aes_string(col)) + geom_bar(aes(fill=Churn),position="dodge")
}))
fit_tel
#fit logistic regression
fit_tel <- glm(Churn~.,data=train_tel,family = binomial,method = "stepwise")
#fit logistic regression
fit_tel <- glm(Churn~.,data=train_tel,family = binomial,method = "step")
library(e1071)
library(e1071)
install.packages("e1071")
library(tidyverse)
library(miscset)
df_tel <- read.csv("C:/Users/bjanarth/Documents/DataScience/Science Projects/TelcoChurn.csv")
#Conver Char to Factor
df_tel <- df_tel %>% mutate_if(is.character, as.factor)
#Convert int to Factor
df_tel$SeniorCitizen <- as.factor(df_tel$SeniorCitizen)
#Check for missing Values
df_tel %>% map(~ sum(is.na(.)))
#impute Missing Values for Total Charges with Median
df_tel <- df_tel %>% mutate(TotalCharges = replace(TotalCharges,is.na(TotalCharges),median(TotalCharges,na.rm = T)))
#Verify if Missing values are there
sum(is.na(df_tel$TotalCharges))
library(psych)
#Cross check for Missing Values
colSums(is.na(df_tel))
##Prepare for Analysis
#remove customer id as it contains unique records
df_tel <- df_tel %>% select(-customerID)
#Check Class Bias
table(df_tel$Churn)
df_temp <- df_tel
library(car)
df_temp$gender <-recode(df_temp$gender,"'Female' = 0 ; 'Male' = 1");
df_temp$Partner <-recode(df_temp$Partner,"'No' = 0 ; 'Yes' = 1");
table(df_temp$Dependents)
df_temp$Dependents <-recode(df_temp$Dependents,"'No' = 0 ; 'Yes' = 1");
table(df_temp$PhoneService)
df_temp$PhoneService <-recode(df_temp$PhoneService,"'No' = 0 ; 'Yes' = 1");
table(df_temp$MultipleLines)
df_temp$MultipleLines <-recode(df_temp$MultipleLines,"'No' = 0 ; 'Yes' = 1;'No phone service' = 2");
table(df_temp$InternetService)
df_temp$InternetService <-recode(df_temp$InternetService,"'No' = 0 ; 'DSL' = 1;'Fiber optic' = 2");
table(df_temp$OnlineSecurity)
df_temp$OnlineSecurity <-recode(df_temp$OnlineSecurity,"'No' = 0 ; 'Yes' = 1;'No internet service' = 2");
table(df_temp$OnlineBackup)
df_temp$OnlineBackup <-recode(df_temp$OnlineBackup,"'No' = 0 ; 'Yes' = 1;'No internet service' = 2");
table(df_temp$DeviceProtection)
df_temp$DeviceProtection <-recode(df_temp$DeviceProtection,"'No' = 0 ; 'Yes' = 1;'No internet service' = 2");
table(df_temp$TechSupport)
df_temp$TechSupport <-recode(df_temp$TechSupport,"'No' = 0 ; 'Yes' = 1;'No internet service' = 2");
table(df_temp$StreamingTV)
df_temp$StreamingTV <-recode(df_temp$StreamingTV,"'No' = 0 ; 'Yes' = 1;'No internet service' = 2");
table(df_temp$StreamingMovies)
df_temp$StreamingMovies <-recode(df_temp$StreamingMovies,"'No' = 0 ; 'Yes' = 1;'No internet service' = 2");
table(df_temp$Contract)
df_temp$Contract <-recode(df_temp$Contract,"'Month-to-month' = 0 ; 'One year' = 1;'Two year' = 2");
table(df_temp$PaperlessBilling)
df_temp$PaperlessBilling <-recode(df_temp$PaperlessBilling,"'No' = 0 ; 'Yes' = 1");
table(df_temp$PaymentMethod)
df_temp$PaymentMethod <-recode(df_temp$PaymentMethod,"'Bank transfer (automatic)' = 0 ; 'Credit card (automatic)' = 1;'Electronic check' = 2;'Mailed check' = 3");
################
input_yes_temp <- df_temp[which(df_temp$Churn == "Yes"),]
input_no_temp  <- df_temp[which(df_temp$Churn == "No"),]
set.seed(100)
input_yes_training_temp <- sample(1:nrow(input_yes_temp),0.7*nrow(input_yes_temp))
input_no_training_temp <- sample(1:nrow(input_no_temp),0.7*nrow(input_yes_temp))
training_yes_temp <- input_yes[input_yes_training_temp,]
training_no_temp  <- input_no[input_no_training_temp,]
trainingdata_temp <- rbind(training_yes_temp, training_no_temp)
#Test Data
test_yes_temp <- input_yes_temp[-input_yes_training_temp,]
test_no_temp  <- input_no_temp[-input_no_training_temp,]
testdata_temp <- rbind(test_yes_temp, test_no_temp)
testdata_temp$gender
testdata_temp$tenure <- as.factor(testdata_temp$tenure)
testdata_temp$MonthlyCharges <- as.factor(testdata_temp$MonthlyCharges)
testdata_temp$TotalCharges <- as.factor(testdata_temp$TotalCharges)
fit_temp <- glm(Churn~.,data=trainingdata_temp,family = binomial(link="logit"))
df_temp$gender <-recode(df_temp$gender,"'Female' = 0 ; 'Male' = 1");
df_temp$Partner <-recode(df_temp$Partner,"'No' = 0 ; 'Yes' = 1");
table(df_temp$Dependents)
df_temp$Dependents <-recode(df_temp$Dependents,"'No' = 0 ; 'Yes' = 1");
table(df_temp$PhoneService)
df_temp$PhoneService <-recode(df_temp$PhoneService,"'No' = 0 ; 'Yes' = 1");
table(df_temp$MultipleLines)
df_temp$MultipleLines <-recode(df_temp$MultipleLines,"'No' = 0 ; 'Yes' = 1;'No phone service' = 2");
table(df_temp$InternetService)
df_temp$InternetService <-recode(df_temp$InternetService,"'No' = 0 ; 'DSL' = 1;'Fiber optic' = 2");
table(df_temp$OnlineSecurity)
df_temp$OnlineSecurity <-recode(df_temp$OnlineSecurity,"'No' = 0 ; 'Yes' = 1;'No internet service' = 2");
table(df_temp$OnlineBackup)
df_temp$OnlineBackup <-recode(df_temp$OnlineBackup,"'No' = 0 ; 'Yes' = 1;'No internet service' = 2");
table(df_temp$DeviceProtection)
df_temp$DeviceProtection <-recode(df_temp$DeviceProtection,"'No' = 0 ; 'Yes' = 1;'No internet service' = 2");
table(df_temp$TechSupport)
df_temp$TechSupport <-recode(df_temp$TechSupport,"'No' = 0 ; 'Yes' = 1;'No internet service' = 2");
table(df_temp$StreamingTV)
df_temp$StreamingTV <-recode(df_temp$StreamingTV,"'No' = 0 ; 'Yes' = 1;'No internet service' = 2");
table(df_temp$StreamingMovies)
df_temp$StreamingMovies <-recode(df_temp$StreamingMovies,"'No' = 0 ; 'Yes' = 1;'No internet service' = 2");
table(df_temp$Contract)
df_temp$Contract <-recode(df_temp$Contract,"'Month-to-month' = 0 ; 'One year' = 1;'Two year' = 2");
table(df_temp$PaperlessBilling)
df_temp$PaperlessBilling <-recode(df_temp$PaperlessBilling,"'No' = 0 ; 'Yes' = 1");
table(df_temp$PaymentMethod)
df_temp$PaymentMethod <-recode(df_temp$PaymentMethod,"'Bank transfer (automatic)' = 0 ; 'Credit card (automatic)' = 1;'Electronic check' = 2;'Mailed check' = 3");
################
input_yes_temp <- df_temp[which(df_temp$Churn == "Yes"),]
input_no_temp  <- df_temp[which(df_temp$Churn == "No"),]
set.seed(100)
input_yes_training_temp <- sample(1:nrow(input_yes_temp),0.7*nrow(input_yes_temp))
input_no_training_temp <- sample(1:nrow(input_no_temp),0.7*nrow(input_yes_temp))
training_yes_temp <- input_yes[input_yes_training_temp,]
training_no_temp  <- input_no[input_no_training_temp,]
trainingdata_temp <- rbind(training_yes_temp, training_no_temp)
training_yes_temp <- input_yes_temp[input_yes_training_temp,]
training_no_temp  <- input_no_temp[input_no_training_temp,]
trainingdata_temp <- rbind(training_yes_temp, training_no_temp)
#Test Data
test_yes_temp <- input_yes_temp[-input_yes_training_temp,]
test_no_temp  <- input_no_temp[-input_no_training_temp,]
testdata_temp <- rbind(test_yes_temp, test_no_temp)
testdata_temp$gender
testdata_temp$tenure <- as.factor(testdata_temp$tenure)
testdata_temp$MonthlyCharges <- as.factor(testdata_temp$MonthlyCharges)
testdata_temp$TotalCharges <- as.factor(testdata_temp$TotalCharges)
fit_temp <- glm(Churn~.,data=trainingdata_temp,family = binomial(link="logit"))
predicted_temp <- predict(fit_temp,testdata_temp,type = "response")
trainingdata_temp$tenure <- as.factor(trainingdata_temp$tenure)
trainingdata_temp$MonthlyCharges <- as.factor(trainingdata_temp$MonthlyCharges)
trainingdata_temp$TotalCharges <- as.factor(trainingdata_temp$TotalCharges)
fit_temp <- glm(Churn~.,data=trainingdata_temp,family = binomial(link="logit"))
predicted_temp <- predict(fit_temp,testdata_temp,type = "response")
str(df_tel)
trainingdata_temp$tenure <- as.integer(trainingdata_temp$tenure)
trainingdata_temp$MonthlyCharges <- as.numeric(trainingdata_temp$MonthlyCharges)
trainingdata_temp$TotalCharges <- as.numeric(trainingdata_temp$TotalCharges)
testdata_temp$tenure <- as.integer(testdata_temp$tenure)
testdata_temp$MonthlyCharges <- as.numeric(testdata_temp$MonthlyCharges)
testdata_temp$TotalCharges <- as.numeric(testdata_temp$TotalCharges)
fit_temp <- glm(Churn~.,data=trainingdata_temp,family = binomial(link="logit"))
predicted_temp <- predict(fit_temp,testdata_temp,type = "response")
vif(fit_temp)
summary(fit_temp)
testdata_temp <- testdata_temp[which(testdata_temp$MultipleLines == 1),]
trainingdata_temp <- trainingdata_temp[which(trainingdata_temp$MultipleLines == 1),]
testdata_temp <- testdata_temp[which(testdata_temp$OnlineSecurity == 1),]
trainingdata_temp <- trainingdata_temp[which(trainingdata_temp$OnlineSecurity == 1),]
testdata_temp
training_yes_temp <- input_yes_temp[input_yes_training_temp,]
training_no_temp  <- input_no_temp[input_no_training_temp,]
trainingdata_temp <- rbind(training_yes_temp, training_no_temp)
#Test Data
test_yes_temp <- input_yes_temp[-input_yes_training_temp,]
test_no_temp  <- input_no_temp[-input_no_training_temp,]
testdata_temp <- rbind(test_yes_temp, test_no_temp)
str(trainingdata_temp)
fit_temp <- glm(Churn~.,data=trainingdata_temp,family = binomial(link="logit"))
predicted_temp <- predict(fit_temp,testdata_temp,type = "response")
vif(fit_temp)
predicted_temp
input_yes <- df_tel[which(df_tel$Churn == "Yes"),]
input_no  <- df_tel[which(df_tel$Churn == "No"),]
set.seed(100)
input_yes_training <- sample(1:nrow(input_yes),0.7*nrow(input_yes))
input_no_training <- sample(1:nrow(input_no),0.7*nrow(input_yes))
training_yes <- input_yes[input_yes_training,]
training_no  <- input_no[input_no_training,]
trainingdata <- rbind(training_yes, training_no)
#Test Data
test_yes <- input_yes[-input_yes_training,]
test_no  <- input_no[-input_no_training,]
testdata <- rbind(test_yes, test_no)
fit_tel <- glm(Churn~.,data=trainingdata,family = binomial(link="logit"))
predicted <- predict(fit_tel,testdata,type = "response")
predicted
